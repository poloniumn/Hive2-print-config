#######################################################################################################################################
# 喷嘴清理
#######################################################################################################################################

[gcode_macro clean_nozzle]

# 是否放置在左后方
variable_location_bucket_rear:      False

# 是否启动清洗
variable_enable_purge:              True


variable_purge_len:            10	         #清洗多少毫米的耗材
variable_purge_spd:           150	         #移动速度
variable_purge_temp_min:      240	         #最低清洗温度
variable_purge_ret:             2	      	 #清洗后回抽长度
variable_ooze_dwell:            2          	 #清洗和回抽和等待的时间
variable_brush_top:            10		 #清洗高度
variable_clearance_z:           5	         #清洗之前刷子离喷嘴的高度
variable_wipe_qty:              3	         #清洗几次？一次来回两遍
variable_prep_spd_xy:        3000	         #非清洁xy移动速度
variable_prep_spd_z:         1500	         #非清洁Z移动速度
variable_wipe_spd_xy:        5000	         #清洁XY移动速度


#			← brush_width 刷子长→                            
#			 _________________                                                          ↑
#			|                 |  ↑                
#  brush_start刷子X0	|                 | brush_depth 刷子宽
# 			|_________________|  ↓
#				(y)                                                                 ↓
#			 brush_front 刷子Y0 

variable_brush_start:     50			; 刷子X0
variable_brush_width:     52			; 刷子长

## 是否位于左后方为False时可用，true为0
variable_brush_front:       0          		; 刷子Y0
variable_brush_depth:       3          		; 刷子宽


#				     bucket_gap  桶的间隙
#					  ← ---- →
#			____________________________________________
#			|                 |      |                 |      
#			|                 |      |                 |
#bucket_start 桶 X0	|                 |______|                 |
#			|                 |      |                 |
#			|                 |      |                 |
#			|_________________|. . . |_________________|
#			← ------------- →        ← ------------- →
#	      桶的左边宽度bucket_left_width        bucket_right_width桶的右边宽度


variable_bucket_left_width:    92	#桶的左边宽度
variable_bucket_right_width:   40	#桶的右边宽度
variable_bucket_gap:           22	#桶的间隙
variable_bucket_start: 		0	#桶 X0



###############################################################################################################################################
#不要动！！！！！
###############################################################################################################################################

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 0 = left, 1 = right
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start + (brush_width * bucket_pos)} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + (brush_width * (1 - bucket_pos))} F{wipe_spd_xy}
         G1 X{brush_start + (brush_width * bucket_pos)} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_start + (bucket_left_width / 4)} F{prep_spd_xy} #bugfix for right side mounted buckets

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
