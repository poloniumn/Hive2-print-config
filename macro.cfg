################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~ 打印机设置  ~~~~~~~~~~~~~~~~~~~~~~~~~~ #
################################################################################

##--------------------------------------------------------------------
#虚拟SD卡
##--------------------------------------------------------------------
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

##--------------------------------------------------------------------
#显示状态
##--------------------------------------------------------------------
[display_status]

##--------------------------------------------------------------------
#排除对象
##--------------------------------------------------------------------
[exclude_object]

##--------------------------------------------------------------------
#圆弧支持
##--------------------------------------------------------------------
[gcode_arcs]
resolution: 0.1

################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~ G代码按钮 ~~~~~~~~~~~~~~~~~~~~~~~~~~ #
################################################################################

#[include Gcodebutton.cfg]

#####################################################################
# 	暂停、恢复、取消
#     这些宏在 Klipper 中启用暂停和恢复。
#####################################################################


##--------------------------------------------------------------------
#启用暂停恢复取消
##--------------------------------------------------------------------
[pause_resume]


##--------------------------------------------------------------------
#部分数值设置
##--------------------------------------------------------------------

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True 	#使用自定义的 x,y 驻留坐标 [True/False] 
variable_custom_park_x    : 150  	#自定义 X 位置; 数值必须在您定义的 X 最小值和最大值范围内
variable_custom_park_y    : 150		#自定义 Y 位置；数值必须在您定义的最小和最大 Y 值范围内
variable_custom_park_dz   : 30		#自定义 dz 值；移动到驻车位置时抬起喷嘴的值，以毫米为单位
variable_retract          : 2.0		#PAUSE 时缩回的值
variable_cancel_retract   : 15.0	#CANCEL_PRINT 时缩回的值
variable_speed_retract    : 35.0	#缩放速度，单位 mm/s  retract 
variable_unretract        : 2.0		#RESUME 时取消缩放的值
variable_speed_unretract  : 35.0	#松开速度，单位 mm/s  unretract
variable_speed_hop        : 15.0	#z 移动速度，单位 mm/s
variable_speed_move       : 100.0	#移动速度，单位毫米/秒
variable_park_at_cancel   : True	#允许在执行 CANCEL_PRINT [True/False] 时移动刀头至停放位置。
variable_park_at_cancel_x : None	#在 CANCEL_PRINT [None/Position as Float] 期间的不同驻停位置；park_at_cancel 必须为 True
variable_park_at_cancel_y : None	#CANCEL_PRINT 时的不同停放位置 [None/Position as Float]；park_at_cancel 必须为 True

## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
## !!! 注意 如果设置 use_fw_retraction：True，则必须在 printer.cfg 中定义 [firmware_retraction] !..！

variable_use_fw_retract   : False 	#使用 fw_retraction 代替手动版本 [True/False] !
variable_idle_timeout     : 0     	#空闲超时开始前的时间（秒）。值 0 表示不设置或恢复任何值
gcode:

##--------------------------------------------------------------------
#取消打印
##--------------------------------------------------------------------

[gcode_macro CANCEL_PRINT]
description: 取消运行的打印
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
  {% set retract = client.cancel_retract|default(5.0)|abs %}
  ##### define park position #####
  {% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
            else "X=" ~ client.park_at_cancel_x %}
  {% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
            else "Y=" ~ client.park_at_cancel_y %}
  {% set custom_park = park_x|length > 0 or park_y|length > 0 %}
  ##### end of definitions #####
  # restore idle_timeout time if needed
  {% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
  {% endif %}
  {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
  _CLIENT_RETRACT LENGTH={retract}
  TURN_OFF_HEATERS
  M106 S0
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  CANCEL_PRINT_BASE

##--------------------------------------------------------------------
#暂停打印
##--------------------------------------------------------------------

[gcode_macro PAUSE]
description: 暂停运行的打印
rename_existing: PAUSE_BASE
variable_restore_idle_timeout: 0
gcode:
  ##### get user parameters or use default ##### 
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set idle_timeout = client.idle_timeout|default(0) %}
  {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0%}
  {% set restore = False if printer.toolhead.extruder == ''
              else True  if params.RESTORE|default(1)|int == 1 else False %}
  ##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
  # set a new idle_timeout value
  {% if idle_timeout > 0 %}
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
    SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
  {% endif %}
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

##--------------------------------------------------------------------
#恢复打印
##--------------------------------------------------------------------

[gcode_macro RESUME]
description: 恢复运行的打印
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'restore': False, 'temp': 0}
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set sp_move = client.speed_move|default(velocity) %}
  ##### end of definitions #####
  # restore idle_timeout time if needed
  {% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
  {% endif %}
  {% if printer.idle_timeout.state|upper == "IDLE" %}
    {% if last_extruder_temp.restore %} M109 S{last_extruder_temp.temp} {% endif %}
  {% endif %}
  _CLIENT_EXTRUDE
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

# Usage: SET_PAUSE_NEXT_LAYER [ENABLE=[0|1]] [MACRO=<name>]

##--------------------------------------------------------------------
#暂停下一层
##--------------------------------------------------------------------

[gcode_macro SET_PAUSE_NEXT_LAYER]
description: 在到达下一层时启用暂停功能
gcode:
  {% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
  {% set ENABLE = params.ENABLE|default(1)|int != 0 %}
  {% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

# Usage: SET_PAUSE_AT_LAYER [ENABLE=[0|1]] [LAYER=<number>] [MACRO=<name>]
[gcode_macro SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
gcode:
  {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
  {% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
             else params.LAYER is defined %}
  {% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
  {% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]

##--------------------------------------------------------------------
#设置打印统计信息
##--------------------------------------------------------------------

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: 重写，以获得 pause_next_layer 和 pause_at_layer 功能
variable_pause_next_layer: { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer  : { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode:
  {% if pause_next_layer.enable %}
    RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
    {pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_NEXT_LAYER ENABLE=0
  {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
    RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
    {pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_PAUSE_AT_LAYER ENABLE=0
  {% endif %}
  SET_PRINT_STATS_INFO_BASE {rawparams}

##### internal use #####

##--------------------------------------------------------------------
#打印头停止位置
##--------------------------------------------------------------------

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: 助手：停放 PAUSE 和 CANCEL_PRINT 中使用的工具头
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
  {% set custom_park_x  = client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = client.custom_park_y|default(0.0) %}
  {% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
  {% set sp_hop         = client.speed_hop|default(15) * 60 %}
  {% set sp_move        = client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set origin    = printer.gcode_move.homing_origin %}
  {% set act       = printer.gcode_move.gcode_position %}
  {% set max       = printer.toolhead.axis_maximum %}
  {% set cone      = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  _CLIENT_RETRACT
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    RESPOND TYPE=echo MSG='Printer not homed'
  {% endif %}

##--------------------------------------------------------------------
#客户端挤出
##--------------------------------------------------------------------

[gcode_macro _CLIENT_EXTRUDE]
description: 如果挤出机温度足够高，就会挤出
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
  {% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
  {% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}
  ##### end of definitions #####
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].can_extrude %}
      {% if use_fw_retract %}
        {% if length < 0 %}
          G10
        {% else %}
          G11
        {% endif %}
      {% else %}
        M83
        G1 E{length} F{(speed|float|abs) * 60}
        {% if absolute_extrude %}
          M82
        {% endif %}
      {% endif %}
    {% else %}
      RESPOND TYPE=echo MSG='Extruder not hot enough'
    {% endif %}
  {% endif %}


##--------------------------------------------------------------------
#客户端退回
##--------------------------------------------------------------------

[gcode_macro _CLIENT_RETRACT]
description: 如果挤出机温度足够高，则会缩回
gcode:
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
  {% set speed = params.SPEED|default(client.speed_retract)|default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

#####################################################################
# 	自定义G代码
#####################################################################

##--------------------------------------------------------------------
#校准喷头PID
##--------------------------------------------------------------------
[gcode_macro PID_extruder]
description: 245度热端校准
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=245
  
##--------------------------------------------------------------------
#校准热床PID
##--------------------------------------------------------------------
[gcode_macro PID_heater_bed]
description: 100度热床校准
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100

##--------------------------------------------------------------------
#ADXL345
##--------------------------------------------------------------------
[gcode_macro QUERY]
description: 检测ADXL345是否存在
gcode:
	ACCELEROMETER_QUERY

##--------------------------------------------------------------------
#共振校准
##--------------------------------------------------------------------
[gcode_macro SHAPER]
description: 开始共振校准
gcode:
	SHAPER_CALIBRATE

#####################################################################
# 	自定义宏
#####################################################################

##--------------------------------------------------------------------
#入丝
##--------------------------------------------------------------------
[gcode_macro LOAD_FILAMENT]
gcode:
     M83
     G1 E65 F3000
     G1 E10 F300
     G1 E-2 F500
     M82

##--------------------------------------------------------------------
#出丝
##--------------------------------------------------------------------
[gcode_macro UNLOAD_FILAMENT]
gcode:
     M83
     G1 E-100 F3000
     M82

##--------------------------------------------------------------------
#丝换色
##--------------------------------------------------------------------
[gcode_macro Clean_FILAMENT]
gcode:
     M83
     G1 E65 F3000
     G1 E250 F300
     G1 E-100 F3000
     M82

##--------------------------------------------------------------------
#G32
##--------------------------------------------------------------------
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    #QUAD_GANTRY_LEVEL
    Z_TILT_ADJUST
    G28 Z
    G90
    G0 X150 Y150 Z25 F3600

##--------------------------------------------------------------------
#开始打印
##--------------------------------------------------------------------
[gcode_macro PRINT_START]
gcode:
 G90
  SET_GCODE_OFFSET Z=0.0
  #Clean_nozzle
  #G28 Z
  BED_MESH_PROFILE LOAD=default
  
  G1 X5 Y5 Z1 F3000
  G92 E0
  G1 E35 F500
  G1 Z0.3
  G1 Y25 E20 F300
  G1 Y40 Z0.2 F2100
  G92 E0
  
##--------------------------------------------------------------------
#结束打印
##--------------------------------------------------------------------
[gcode_macro PRINT_END]
gcode:
    M400
    G92 E0
    G1 E-15 F3600
    G91
    TURN_OFF_HEATERS
    G1 Z10 F3000
    G90
    G0  X150 Y300 F3600
    BED_MESH_CLEAR